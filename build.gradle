plugins {
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
    id 'java'
    id 'jacoco'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id "com.moowork.node" version "1.3.1"
    id 'nu.studer.jooq' version '3.0.3'
}

project.ext {
    dependencyRepos = ["plugin-api", "commons-bom"]
    releaseMode = project.hasProperty("releaseMode")
    pluginId = "toilatested-debug"
    pluginsDir = "$buildDir/plugins"
}

group 'com.toilatester'
version '1.0'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenCentral()
    maven { url "https://m2proxy.atlassian.com/repository/public" }
    if (releaseMode) {
        dependencyRepos.forEach { path ->
            maven {
                setUrl("https://maven.pkg.github.com/reportportal/${path}")
                credentials {
                    username = findProperty("githubUserName")
                    password = findProperty("githubToken")
                }
            }
        }
    } else {
        maven { url 'https://jitpack.io' }
    }
}

dependencyManagement {
    imports {
        mavenBom('com.github.reportportal:commons-bom:5.6.0')
    }
}

dependencies {
    if (releaseMode) {
        implementation 'com.epam.reportportal:plugin-api'
        annotationProcessor 'com.epam.reportportal:plugin-api'
    } else {
        implementation 'com.github.reportportal:plugin-api:5.6.0'
        annotationProcessor 'com.github.reportportal:plugin-api:5.6.0'
    }
    implementation group: 'javax.servlet', name: 'javax.servlet-api', version: '4.0.1'
    implementation group: 'org.glassfish', name: 'javax.el', version: '3.0.0'
    implementation group: 'javax.el', name: 'javax.el-api', version: '3.0.0'
    implementation group: 'org.jooq', name: 'jooq', version: '3.14.4'

}

test {
    useJUnitPlatform()
}

artifacts {
    archives shadowJar
}

sourceSets {
    main {
        resources
                {
                    exclude '**'
                }
    }
}

jar {
    archivesBaseName = 'toilatester'
    from("src/main/resources") {
        into("/resources")
    }
    from("ui/build") {
        into("/resources")
    }
    manifest {
        attributes(
                "Class-Path": configurations.compile.collect { it.getName() }.join(' '),
                "Plugin-Id": "${pluginId}",
                "Plugin-Version": "${project.version}",
                "Plugin-Provider": "Report Portal",
                "Plugin-Class": "com.toilatester.ReportExtendsPlugin",
                "Plugin-Service": "api"
        )
    }
}

shadowJar {
    from("src/main/resources") {
        into("/resources")
    }
    from("ui/build") {
        into("/resources")
    }
    configurations = [project.configurations.compile]
    zip64 true
    dependencies {
    }
}

task plugin(type: Jar) {
    getArchiveBaseName().set("plugin-${pluginId}")
    into('classes') {
        with jar
    }
    into('lib') {
        from configurations.compile
    }
    extension('zip')
}

task assemblePlugin(type: Copy) {
    from plugin
    into pluginsDir
}

task assemblePlugins(type: Copy) {
    dependsOn subprojects.assemblePlugin
}

wrapper {
    gradleVersion = '6.0'
}

build.dependsOn(shadowJar)